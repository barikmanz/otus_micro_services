# Default values for user-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# global config
global:
  env:
    "ASPNETCORE_ENVIRONMENT": "Production"
    "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true"

user-service-api:
  replicaCount: 2

  image:
    repository: barikman/otus_hw_3_userservice
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v3"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }
  
  podSecurityContext: { }
  # fsGroup: 2000
  
  securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  
  service:
    type: ClusterIP
    port: 8000
  
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: "arch.homework"
        paths:
          - path: /
            pathType: Prefix
    tls: 
      - secretName: arch-homework-tls
        hosts:
          - arch.homework
          
  metrics:
    serviceMonitor:
      enabled: true
    
  resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  
  nodeSelector: { }
  
  tolerations: [ ]
  
  affinity: { }

user-service-migrator:
  image:
    repository: barikman/otus_hw_3_userservice_migrator
    pullPolicy: IfNotPresent
    tag: "v1"

  job:
    ## Should the job be rescheduled on the same node if it fails, or just stopped
    restartPolicy: Never
